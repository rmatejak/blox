{
  "swagger": "2.0",
  "info": {
    "description": "This is a REST API server for [BLOX](https://stash.coi.gov.pl/projects/PRAKTYKI/repos/blox/browse) application.",
    "version": "0.0.1",
    "title": "BLOX"
  },
  "basePath": "/blox",

  "schemes": [
    "http"
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns a list of all users",
        "operationId": "getAllUsers",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserViewDto"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add a user",
        "operationId": "addUser",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userDto",
            "description": "UÅ¼ytkownik z nowymi danymi",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns a single user by ID",
        "operationId": "getUserById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of a user",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/UserViewDto"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Updates a user by ID",
        "operationId": "updateUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of a user",
            "required": true
          },
          {
            "in": "body",
            "name": "userDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a user by ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of a user"
          }
        ],
        "responses": {
          "204": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/blogs": {
      "post": {
        "tags": [
          "blogs"
        ],
        "summary": "Creating a blog for the user",
        "operationId": "addBlogToUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BlogDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlogDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource created"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/blogs/{id}": {
      "get": {
        "tags": [
          "blogs"
        ],
        "summary": "Returns a single blog by ID",
        "operationId": "getBlogById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of blog",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/BlogViewDto"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "blogs"
        ],
        "summary": "Deletes blog by ID",
        "operationId": "deleteBlogById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of a blog",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/blogs/{id}/rate": {
      "put": {
        "tags": [
          "blogs"
        ],
        "summary": "Adding a rating to your blog",
        "operationId": "AddRatingToBlog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of a blog",
            "required": true
          },
          {
            "in": "body",
            "name": "RateBlog",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/category": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Adding category to blog",
        "operationId": "addCategoryToBlog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "ID of a blog",
            "required": true
          },
          {
            "in": "body",
            "name": "CategoryDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CategoryDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource created"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/article": {
      "post": {
        "tags": [
          "articles"
        ],
        "summary": "Adding article to category",
        "operationId": "addArticleToCategory",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "newArticle",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArticleDto"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Resource created"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      },
      "put": {
        "tags": [
          "articles"
        ],
        "summary": "Adding a rating to your article",
        "operationId": "AddRatingToArticle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "RateArticle",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RateDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/comment/blog": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Adding a comment to the blog",
        "operationId": "AddCommentToBlog",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "BlogComment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    },
    "/comment/article": {
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "Adding a comment to the article",
        "operationId": "AddCommentToArticle",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ArticleComment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDto"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "UserDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 30,
          "pattern": "[0-9A-Za-zÅ¼ÅºÄÅÃ³ÅÄÄÅÅ»Å¹ÄÄÅÄÅÃÅ\\s-]*"
        },
        "secondName": {
          "type": "string",
          "minLength": 2,
          "maxLength": 30,
          "pattern": "^[A-ZÄÄÄÅ¹Å»ÅÃÅÅ][a-zÄÄÅÄÅºÅ¼Ã³ÅÅ]*( [A-ZÄÄÄÅ¹Å»ÅÃÅÅ][a-zÄÄÅÄÅºÅ¼Ã³ÅÅ]*){0,1}$"
        },
        "login": {
          "type": "string",
          "minLength": 2,
          "maxLength": 30,
          "pattern": "^[A-Z0-9a-z._%+-]*$"
        },
        "email": {
          "type": "string",
          "format": "email",
          "maxLength": 50,
          "pattern": "^[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}$"
        },
        "password": {
          "type": "string",
          "format": "password",
          "minLength": 8,
          "pattern": "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,}$"
        },
        "confirmedPassword": {
          "type": "string",
          "format": "password",
          "minLength": 8
        },
        "roleType": {
          "type": "string",
          "enum": [
            "ADMIN",
            "USER"
          ]
        }
      },
      "required": [
        "name",
        "secondName",
        "login",
        "email",
        "password",
        "confirmedPassword",
        "roleType"
      ]
    },
    "ArticleDto": {
      "type": "object",
      "properties": {
        "categoryId": {
          "type": "integer",
          "format": "int64"
        },
        "author": {
          "type": "string",
          "minLength": 2,
          "maxLength": 100
        },
        "topic": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "text": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "BlogDto": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "integer",
          "format": "int64"
        },
        "blogType": {
          "$ref": "#/definitions/BlogType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "status": {
          "$ref": "#/definitions/StatusDto"
        }
      }
    },
    "UserViewDto": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "readOnly": true
        },
        "secondName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "readOnly": true
        },
        "login": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "readOnly": true
        },
        "email": {
          "type": "string",
          "format": "email",
          "minLength": 0,
          "maxLength": 100,
          "readOnly": true
        }
      }
    },
    "BlogViewDto": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "integer",
          "format": "int64",
          "minimum": 1,
          "readOnly": true
        },
        "rateType": {
          "$ref": "#/definitions/RateTypeDto"
        },
        "blogType": {
          "$ref": "#/definitions/BlogType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "status": {
          "$ref": "#/definitions/StatusDto"
        }
      }
    },
    "CommentDto": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "content": {
          "type": "string",
          "minLength": 0,
          "maxLength": 300
        }
      },
      "required": [
        "ownerId",
        "content"
      ]
    },
    "CategoryDto": {
      "type": "object",
      "properties": {
        "blogId": {
          "type": "integer",
          "format": "int64",
          "minimum": 1
        },
        "name": {
          "type": "string",
          "minLength": 2,
          "maxLength": 100
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "status": {
          "$ref": "#/definitions/StatusDto"
        }
      },
      "required": [
        "blogId",
        "name",
        "description",
        "status"
      ]
    },
    "BlogType": {
      "type": "string",
      "enum": [
        "KOD",
        "BLAD",
        "PORADNIK"
      ]
    },
    "RoleTypeDto": {
      "type": "string",
      "enum": [
        "ADMIN",
        "USER"
      ]
    },
    "RateDto": {
      "type": "object",
      "properties": {
        "rateType": {
          "$ref": "#/definitions/RateTypeDto"
        }
      },
      "required": [
        "rateType"
      ]
    },
    "RateTypeDto": {
      "type": "string",
      "enum": [
        "FAIL",
        "POOR",
        "SATISFACTORY",
        "GOOD",
        "VERY_GOOD"
      ]
    },
    "StatusDto": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ]
    },
    "ErrorDto": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}